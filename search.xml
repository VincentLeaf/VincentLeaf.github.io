<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[接入图灵接口来制作微信机器人]]></title>
      <url>/2017/07/06/wechatbot02/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上次我们一起了解了有关itchat常用的API接口，这次我将介绍如何将图灵机器人接入itchat，制作一个能够智能判断，回复消息的微信机器人。<br><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/3788808.jpg" alt=""></p>
<h2 id="图灵机器人介绍"><a href="#图灵机器人介绍" class="headerlink" title="图灵机器人介绍"></a>图灵机器人介绍</h2><p><a href="http://www.tuling123.com" target="_blank" rel="external">图灵机器人</a>是一个能够根据用户输入来自动判断场景来回复用户的开发平台，也是目前我所了解中在中文语境下运行的最好的平台（我没并没有收到来自他们的广告费）。在平台注册后我们可以拿到自己的API Key，并用Request的方式来获取答复。<br><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/2640973.jpg" alt=""></p>
<h2 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h2><p>图灵Request的json至少包含以下三个值，分别是key (API key)， info (用户输入的消息)，userid (用户唯一的ID，用来在不同用户下判断不同的语境)。</p>
<h2 id="将整个Request-amp-Post操作打包"><a href="#将整个Request-amp-Post操作打包" class="headerlink" title="将整个Request &amp; Post操作打包"></a>将整个Request &amp; Post操作打包</h2><p>为了后续的使用，我们将整个request的流程打包成一个方法。这里运用到了Python的request库和json库。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">getReply</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> uid<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> <span class="token string">'http://www.tuling123.com/openapi/api'</span>
    <span class="token triple-quoted-string string">'''API Address'''</span>

    data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">'key'</span> <span class="token punctuation">:</span> <span class="token string">'b1bd5226a8e641b89b4de72c2757ce33'</span><span class="token punctuation">,</span>
        <span class="token string">'info'</span> <span class="token punctuation">:</span> input<span class="token punctuation">,</span>
        <span class="token string">'userid'</span> <span class="token punctuation">:</span> uid
    <span class="token punctuation">}</span>
    <span class="token triple-quoted-string string">'''the three value that Tuling required'''</span>

    jsonData <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token triple-quoted-string string">'''create json data'''</span>

    <span class="token keyword">print</span> <span class="token punctuation">(</span>jsonData<span class="token punctuation">)</span>
    <span class="token triple-quoted-string string">'''for future debug use'''</span>

    reply <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> jsonData<span class="token punctuation">)</span>
    <span class="token triple-quoted-string string">'''post it, and get the generated reply from tuling'''</span>

    <span class="token keyword">return</span> reply<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token triple-quoted-string string">'''return the reply content'''</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>通过post得到一个json的值，这个json根据语境的不同会有两个或三个参数。分别是code (回复消息的类型)，text（回复消息的内容），url（如果回复消息中含有链接，会在这个里面显示）。</p>
<h2 id="userid"><a href="#userid" class="headerlink" title="userid"></a>userid</h2><p>前面提到request的json中有一个必须的参数，userid。这个参数是用来判断不同用户的语境的。比如说一个用户提问“天气怎么样”，此时根据这个userid，机器人会进一步询问“你所在的城市在哪里”，因为记录了userid，此时机器人就有能力联系上下文来进一步回复用户了。</p>
<p>那么这个userid从哪里来呢？最简单的办法就是直接使用用户的微信ID。这个微信ID不同于我们平时所常说的微信号，微信ID是每个用户唯一的，由数字字母组成。查看图灵的文档后发现，微信ID远远长出图灵所接受userid的位数，所以在这里要做一个截取的操作。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">generateUID</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> input<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">30</span><span class="token punctuation">]</span>
    <span class="token triple-quoted-string string">'''extract wechat ID'''</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="回复用户"><a href="#回复用户" class="headerlink" title="回复用户"></a>回复用户</h2><p>在完成上面的部分后，我们当然要把我们获取到的回复信息返回给用户。以下讲讲完整的程序逻辑。</p>
<p>首先是收到来自用户发出的信息，判断为文字信息后进入回复的方法。然后生成图灵要用的userid，用前面写的getReply方法来获取回复。根据code来判断产生的回复中有没有含有链接，如果的有话也要发送给用户。</p>
<p>代码如下：</p>
<pre class="line-numbers language-python"><code class="language-python">@itchat<span class="token punctuation">.</span>msg_register<span class="token punctuation">(</span>TEXT<span class="token punctuation">,</span> isFriendChat<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> 
<span class="token triple-quoted-string string">'''only reply text message'''</span>
<span class="token keyword">def</span> <span class="token function">simpleReply</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    reply <span class="token operator">=</span> getReply<span class="token punctuation">(</span>msg<span class="token punctuation">[</span><span class="token string">'Content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> generateUID<span class="token punctuation">(</span>msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token triple-quoted-string string">'''get reply'''</span>
    replyText <span class="token operator">=</span> reply<span class="token punctuation">[</span><span class="token string">'text'</span><span class="token punctuation">]</span> <span class="token triple-quoted-string string">'''reply content'''</span>
    replyCode <span class="token operator">=</span> <span class="token string">'%s'</span> <span class="token operator">%</span> reply<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span> <span class="token triple-quoted-string string">'''reply code'''</span>
    itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span>replyText<span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
    <span class="token triple-quoted-string string">'''send back text message'''</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>replyCode <span class="token operator">==</span> <span class="token string">'200000'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span>reply<span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span><span class="token punctuation">(</span>replyCode <span class="token operator">==</span> <span class="token string">'302000'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> obj <span class="token keyword">in</span> reply<span class="token punctuation">[</span><span class="token string">'list'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'标题：%s'</span> <span class="token operator">%</span> obj<span class="token punctuation">[</span><span class="token string">'article'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'detailurl'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token triple-quoted-string string">'''
    send other contents to users if reply have any url
    '''</span>

    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'Received message from %s'</span> <span class="token operator">%</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'%s'</span> <span class="token operator">%</span> msg<span class="token punctuation">[</span><span class="token string">'Content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'my reply: '</span> <span class="token operator">+</span> replyText<span class="token punctuation">)</span>
    <span class="token triple-quoted-string string">'''
    for future debug use
    '''</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="转账功能"><a href="#转账功能" class="headerlink" title="转账功能"></a>转账功能</h2><p>判断消息为note类型后我们可以用这个功能来判断转账的数额是否为用户所要求的，如果不是，就可以及时发出提醒。代码如下</p>
<pre class="line-numbers language-python"><code class="language-python">@itchat<span class="token punctuation">.</span>msg_register<span class="token punctuation">(</span><span class="token string">'Note'</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''只处理转账类型的消息'''</span>
<span class="token keyword">def</span> <span class="token function">get_note</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> any<span class="token punctuation">(</span>s <span class="token keyword">in</span> msg<span class="token punctuation">[</span><span class="token string">'Text'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token punctuation">(</span>u<span class="token string">'红包'</span><span class="token punctuation">,</span> u<span class="token string">'转账'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        money <span class="token operator">=</span> msg<span class="token punctuation">[</span><span class="token string">'Text'</span><span class="token punctuation">]</span>
        amount <span class="token operator">=</span> filter<span class="token punctuation">(</span>str<span class="token punctuation">.</span>isdigit<span class="token punctuation">,</span> money<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token triple-quoted-string string">'''获取用户转账的数额'''</span>
        target <span class="token operator">=</span> <span class="token string">'100'</span>
        <span class="token triple-quoted-string string">'''目标数额'''</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span>
        <span class="token triple-quoted-string string">'''debug info'''</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>amount <span class="token operator">==</span> target<span class="token punctuation">)</span><span class="token punctuation">:</span>
            itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'success!'</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span><span class="token punctuation">(</span>amount <span class="token operator">!=</span> target<span class="token punctuation">)</span><span class="token punctuation">:</span>
            itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'failed, wrong amount'</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Other note: %s'</span><span class="token operator">%</span>msg<span class="token punctuation">[</span><span class="token string">'Text'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token triple-quoted-string string">'''notify user is the amount of money correct or not'''</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过使用python的request, itchat以及图灵机器人平台，我们很简单的完成里一个能够智能回复消息,接受指定交易的微信机器人。如果加入更多的逻辑判断，如检测内容中的时间词语等，这个微信机器人甚至可以帮我们来记录日程，创建备忘录等等。</p>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span>
<span class="token keyword">import</span> itchat
<span class="token keyword">from</span> itchat<span class="token punctuation">.</span>content <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> json

<span class="token keyword">def</span> <span class="token function">generateUID</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> input<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">30</span><span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">getReply</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> uid<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> <span class="token string">'http://www.tuling123.com/openapi/api'</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">'key'</span> <span class="token punctuation">:</span> <span class="token string">'b1bd5226a8e641b89b4de72c2757ce33'</span><span class="token punctuation">,</span>
        <span class="token string">'info'</span> <span class="token punctuation">:</span> input<span class="token punctuation">,</span>
        <span class="token string">'userid'</span> <span class="token punctuation">:</span> uid
    <span class="token punctuation">}</span>
    jsonData <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">print</span> <span class="token punctuation">(</span>jsonData<span class="token punctuation">)</span>
    reply <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> jsonData<span class="token punctuation">)</span>
    <span class="token keyword">return</span> reply<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

@itchat<span class="token punctuation">.</span>msg_register<span class="token punctuation">(</span>TEXT<span class="token punctuation">,</span> isFriendChat<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">simpleReply</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    reply <span class="token operator">=</span> getReply<span class="token punctuation">(</span>msg<span class="token punctuation">[</span><span class="token string">'Content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> generateUID<span class="token punctuation">(</span>msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    replyText <span class="token operator">=</span> reply<span class="token punctuation">[</span><span class="token string">'text'</span><span class="token punctuation">]</span>
    replyCode <span class="token operator">=</span> <span class="token string">'%s'</span> <span class="token operator">%</span> reply<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span>
    itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span>replyText<span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>replyCode <span class="token operator">==</span> <span class="token string">'200000'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span>reply<span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span><span class="token punctuation">(</span>replyCode <span class="token operator">==</span> <span class="token string">'302000'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> obj <span class="token keyword">in</span> reply<span class="token punctuation">[</span><span class="token string">'list'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'标题：%s'</span> <span class="token operator">%</span> obj<span class="token punctuation">[</span><span class="token string">'article'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'detailurl'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'Received message from %s'</span> <span class="token operator">%</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'%s'</span> <span class="token operator">%</span> msg<span class="token punctuation">[</span><span class="token string">'Content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'my reply: '</span> <span class="token operator">+</span> replyText<span class="token punctuation">)</span>

@itchat<span class="token punctuation">.</span>msg_register<span class="token punctuation">(</span><span class="token string">'Note'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">get_note</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> any<span class="token punctuation">(</span>s <span class="token keyword">in</span> msg<span class="token punctuation">[</span><span class="token string">'Text'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token punctuation">(</span>u<span class="token string">'红包'</span><span class="token punctuation">,</span> u<span class="token string">'转账'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        money <span class="token operator">=</span> msg<span class="token punctuation">[</span><span class="token string">'Text'</span><span class="token punctuation">]</span>
        amount <span class="token operator">=</span> filter<span class="token punctuation">(</span>str<span class="token punctuation">.</span>isdigit<span class="token punctuation">,</span> money<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        target <span class="token operator">=</span> <span class="token string">'100'</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>amount <span class="token operator">==</span> target<span class="token punctuation">)</span><span class="token punctuation">:</span>
            itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'success!'</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span><span class="token punctuation">(</span>amount <span class="token operator">!=</span> target<span class="token punctuation">)</span><span class="token punctuation">:</span>
            itchat<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'failed, wrong amount'</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Other note: %s'</span><span class="token operator">%</span>msg<span class="token punctuation">[</span><span class="token string">'Text'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

itchat<span class="token punctuation">.</span>auto_login<span class="token punctuation">(</span>enableCmdQR<span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>
itchat<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>作者：Vincent Li</p>
<p>更多内容请访问<a href="http://www.zhuile.me/" target="_blank" rel="external">追了么</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 聊天机器人 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wechat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用itchat库搭建一个微信聊天机器人]]></title>
      <url>/2017/06/06/wechatbot01/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>制作这个机器人的灵感实际上是因为我实在是懒得去一条条的回一些很简单没有意义的微信(逃，在以下的介绍中我将概述如何使用itchat在python中接收并发送信息，并使用图灵机器人接口完成一个能自动聊天的机器人。</p>
<h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><ul>
<li>itchat是一个python的库，我们使用这个库来获得微信中所收到的消息和发送自定义消息。更多有关这个库的信息可以访问它的<a href="https://github.com/littlecodersh/ItChat" target="_blank" rel="external">GitHub主页</a></li>
<li>首先我们在电脑中安装此库所需的环境，直接在终端中运行<code>pip install</code>即可。</li>
</ul>
<p><code>pip install python</code></p>
<ul>
<li>如果你没有安装python，请自行搜索有关python的安装方法</li>
</ul>
<h2 id="itchat接口介绍"><a href="#itchat接口介绍" class="headerlink" title="itchat接口介绍"></a>itchat接口介绍</h2><h3 id="登陆方法itchat-login"><a href="#登陆方法itchat-login" class="headerlink" title="登陆方法itchat.login()"></a><strong>登陆方法</strong><code>itchat.login()</code></h3><ul>
<li>直接调用方法itchat.login()后会自动下载登录所用的二维码，二维码为jpg格式。</li>
<li>第二种方法是调用方法<code>itchat.login(enableCmdQR = 1)</code>使用这个方法后登陆用的二维码将直接在终端（CMD）中打印出来，如果你打印出来的二维码没有对齐，可以尝试将参数修改成<code>itchat.login(enableCmdQr = 2)</code>,这样二维码间的间隙就会变大一些。</li>
<li>其实itchat有保存登录信息的功能，可以让你退出程序后短暂保存登录信息，下次重新启动程序时就不需要再扫码。但我实际开发时总是遇到一些奇怪的Bug，比如说自动回复有时会一次发送两条，这应该是保存登录信息的时候同时也保存了一些消息记录，导致注册消息时出现了一些bug, 有兴趣的话可以使用如下代码：</li>
</ul>
<pre class="line-numbers language-python"><code class="language-python">itchat<span class="token punctuation">.</span>auto_login<span class="token punctuation">(</span>hotReload<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="获取消息-itchat-msg-register-TEXT"><a href="#获取消息-itchat-msg-register-TEXT" class="headerlink" title="获取消息@itchat.msg_register(TEXT)"></a><strong>获取消息</strong><code>@itchat.msg_register(TEXT)</code></h3><ul>
<li>简单来讲，获得消息有两种方法：</li>
</ul>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> itchat
<span class="token keyword">from</span> itchat<span class="token punctuation">.</span>content <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token triple-quoted-string string">'''第一种方法是获取所有类型为“文字”的消息'''</span>
@itchat<span class="token punctuation">.</span>msg_register<span class="token punctuation">(</span>TEXT<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">simpleRegister</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> msg

<span class="token triple-quoted-string string">'''第二种方法是带参数的注册方法，如识别是否为群聊消息，是否为好友消息等。'''</span>
<span class="token triple-quoted-string string">'''如果满足参数，就会优先调用此方法。'''</span>
@itchat<span class="token punctuation">.</span>msg_register<span class="token punctuation">(</span>TEXT<span class="token punctuation">,</span> isFriendChat<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> isGroupChat<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> isMpChat<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">parameterRegister</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> msg
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>除了‘TEXT’文本消息，还有以下几种消息类型：<br><img src="http://oqi5hmt36.bkt.clouddn.com/17-6-13/48725876.jpg" alt=""> </li>
</ul>
<h3 id="消息内容msg-39-Content-39"><a href="#消息内容msg-39-Content-39" class="headerlink" title="消息内容msg[&#39;Content&#39;]"></a>消息内容<code>msg[&#39;Content&#39;]</code></h3><ul>
<li>如果你已经尝试了上述的消息注册方法，你会发现直接打印变量msg是不能成功打印出回复的内容的。因为msg实际上是一个数组，它里头包含了许多有趣的内容。</li>
<li><strong>常用内容介绍</strong><ul>
<li><code>msg[&#39;Content&#39;]</code> 顾名思义，它就是消息中的文字信息，直接打印此内容可以打印出收到的文字信息。</li>
<li><code>msg[&#39;FromUserName&#39;]</code>,消息发出者</li>
<li><code>msg[&#39;ToUserName&#39;]</code>,消息接受者</li>
</ul>
</li>
</ul>
<h3 id="发送方法itchat-send-msg-ToUserName"><a href="#发送方法itchat-send-msg-ToUserName" class="headerlink" title="发送方法itchat.send(msg, ToUserName)"></a>发送方法<code>itchat.send(msg, ToUserName)</code></h3><ul>
<li>itchat中的发送方法不仅仅可以发送文字，还可以发送图片，定位的信息，在此，我将先介绍发送文字的方法。</li>
<li>send方法有两个参数：<ul>
<li>msg: 要发送的文字内容，字符串。</li>
<li>ToUserName: 消息接收者，字符串。</li>
</ul>
</li>
</ul>
<h2 id="自动回复机器人"><a href="#自动回复机器人" class="headerlink" title="自动回复机器人"></a>自动回复机器人</h2><p>在了解以上信息后，我们便可以制作一个简单的微信自动回复机器人。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span>
<span class="token keyword">import</span> itchat
<span class="token keyword">from</span> itchat<span class="token punctuation">.</span>content <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token triple-quoted-string string">'''导入itchat库'''</span>

<span class="token triple-quoted-string string">'''注册来自好友的文字信息'''</span>
@itchat<span class="token punctuation">.</span>msg_register<span class="token punctuation">(</span>TEXT<span class="token punctuation">,</span> isFriendChat <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">autoReply</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    itchat<span class="token punctuation">.</span>reply<span class="token punctuation">(</span>u<span class="token string">'收到消息: %s'</span> <span class="token operator">%</span>msg<span class="token punctuation">[</span><span class="token string">'Content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> msg<span class="token punctuation">[</span><span class="token string">'FromUserName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''回复消息发出者：收到xxx'''</span>

itchat<span class="token punctuation">.</span>login<span class="token punctuation">(</span><span class="token punctuation">)</span>
itchat<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>下次我将介绍如何接入图灵机器人的接口，制作一个微信聊天机器人。</p>
<blockquote>
<p>作者：Vincent Li</p>
<p>更多内容请访问<a href="http://www.zhuile.me/" target="_blank" rel="external">追了么</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 聊天机器人 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wechat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在workflow中速查练习答案]]></title>
      <url>/2017/05/24/anscheck/</url>
      <content type="html"><![CDATA[<blockquote>
<p>这几天在刷SAT练习题时发现在查答案的时候总是要把书翻来翻去，看半天还没找到自己所需要的答案，于是便脑洞一开，设计了这个workflow流程。</p>
</blockquote>
<hr>
<p>Updated, my pics cloud crash and I change to a more stable service.</p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>这个程序的思路是十分简单的，创建一个数组，把答案（ABCDE）全部都丢到数组里，用户输入index，返回index所在的值。</p>
<h1 id="开始制作"><a href="#开始制作" class="headerlink" title="开始制作"></a>开始制作</h1><ul>
<li>首先先花了五分钟把550个答案手动打到了电脑里…（手酸）其实可以直接跟老师要答案的电子版会更快。</li>
</ul>
<p><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/53839916.jpg" alt="answers"></p>
<ul>
<li>在workflow里选择一个正确的流程可以轻松很多，dictionary或者list的格式都是需要一个一个添加值的，这样的话手都会按抽筋吧，而且效率低下。翻了一遍之后发现了一个满足我需求的流程：split text.</li>
</ul>
<p><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/68068771.jpg" alt="spilit"></p>
<ul>
<li>split text有几种模式可以选择，其中有一个选项是把每个字母都分割成list中的一个值，果断选择这个。</li>
</ul>
<p><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/7109361.jpg" alt="split2"></p>
<ul>
<li>然后就加入用户录入的部分了，询问用户要查询的题号，根据题号返回相应的结果并以Alert的方式告知用户。唯一需要注意的就是加入一些逻辑判断（判断用户输入的值是否在答案中），防止出现index out of range的情况。</li>
</ul>
<blockquote>
<p><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/83244143.jpg" alt="in"><br>在我实际使用的时候发现每次查的时候都要点一下workflow，这样的操作就过于繁琐，于是我便加入了这个repeat这样我在不需要退出workflow的情况下就可以继续查下一个题了，提高学习效率。</p>
</blockquote>
<p><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/4124063.jpg" alt="if"></p>
<ul>
<li>将用户输入的值传给list, 查找所处index的值。最后再将查询到的值（答案）以alert的形式显示在用户的屏幕上。</li>
</ul>
<p><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/44091709.jpg" alt=""></p>
<ul>
<li>记得要设置几个变量，以便在alert中调用。</li>
</ul>
<h1 id="实际运行"><a href="#实际运行" class="headerlink" title="实际运行"></a>实际运行</h1><p><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/46248641.jpg" alt=""><br><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/53652226.jpg" alt=""><br><img src="http://oqi5hmt36.bkt.clouddn.com/17-12-27/82782751.jpg" alt=""></p>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>需要先安装iOS Workflow App<br><a href="https://workflow.is/workflows/960b21ee81104e519e3296012374de18" target="_blank" rel="external">workflow练习答案速查</a></p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> workflow </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[追了么]]></title>
      <url>/2017/05/23/%E8%BF%BD%E4%BA%86%E4%B9%88/</url>
      <content type="html"></content>
      
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[图库]]></title>
      <url>/gallery/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[About]]></title>
      <url>/about/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[links]]></title>
      <url>/links/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[标签云]]></title>
      <url>/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
